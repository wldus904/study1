학교 성적 관리 프로그램

<<학생 사용>>
ROLE: student
- 학생 전용 로그인 페이지
    - 학번, 비밀번호로 로그인
    - ( 최초 로그인시 비밀번호 변경 기능 (초기 비밀번호 핸드폰 뒤 4자리) )
- 메인
    - 현재 학년, 반, 번호, 학번 확인
    - 공지 사항
    - 1:1상담 내용 (담임, 과목 담당, 학교)
- 마이페이지
    - 이름, 주소, 이메일, 핸드폰, 등록일 등 개인 정보 확인
    - ( 학번, 핸드폰을 뺀 나머지 정보 수정 가능 (이메일은 중복 체크) )
- 성적 확인
    - 올해 성적 확인: 학년, 반, 과목별 점수, 담당 선생님, 석차, 총점, 평균, 백분율 (정렬 기능)
    - 과거 성적 확인: 학년, 반, 과목별 점수, 담당 선생님, 석차, 총점, 평균, 백분율 (정렬 기능)
- 공지사항
    - 공지사항 확인
- 1:1 상담
    - 내가 등록한 상담 확인, 답변 확인
    - 상담 등록/수정/삭제(파일 첨부 가능?)


<<교직원 전용>>
ROLE: staff
- 교직원 전용 로그인 페이지
    - 교직원번호, 비밀번호로 로그인
    - ( 최초 로그인시 비밀번호 변경 기능 (초기 비밀번호 핸드폰 뒤 4자리) )

- 올해 담당 정보 ( 과거는 관리자에게 요청해야 맞지 않을까? )
    - 담당 학년, 반, 과목, 학생 인원
        - 학번 또는 학생 이름으로 검색
        - 담당한 담임/과목 정보 표시, 학생 인원 정보 확인
    - 상세 페이지
        - 학번 또는 학생 이름으로 검색
        - 담당 했던 또는 하고 있는 학생 정보(담임이면 다, 과목이면 일부만), 학년 성적 확인
            - 담임이라면 올해 모든 성적
            - 과목이라면 올해 해당 과목만
- ( 정답 입력 )
    - ( 학년, 반별 시험 기간 1주일전 정답 입력 ( 기간이 지난 후 수정 불가능) )
    - ( 등록, 수정 로그 확인 )
- 올해 시험 결과
    - 담당한 반 학생의 과목별 성적, 총점/평균/등수/백분율 확인
    - 담당 과목의 학생의 과목별 성적, 총점/평균/등수/백분율 확인
    - 담당 과목의 성적 수정  ( 정해진 기간에만 수정 가능, 입력은 OMR로 할테니 등록은 필요 없을듯)
    - ( 등록, 수정 로그 확인 )
- 1:1상담 
    - 내용 (담임, 과목)
    - 답변 등록
- 공지사항
    - 공지사항 확인


<<관리자 전용>>
ROLE: manager
- 학생 정보
    - 목록 : 학번, 이름, 주소, 이메일, 핸드폰, 등록일, 현재 학년/반, 
    - 상세페이지
        - 과거 학년/반 등 모든 학생 정보 확인
        - 성적 확인 : << 학생 마이페이지 >> 의 최근 성적, 과거 성적과 동일한 화면
    - ( 등록, 수정 )
    - ( 등록, 수정 로그 확인 )
- 교직원 정보
    - 목록: 교직원 번호, 이름, 주소, 이메일, 핸드폰, 등록일
    - 상세 페이지
        - 현재 담임 학년/반, 현재 학년/반 과목, 과거 담인 학년/반, 과거 학년/반 과목 등 교직원 정보 확인
        - 올해와 과거 담당했던 시험 정보(날짜, 분기, 과목)
    - ( 등록, 수정 )
    - ( 등록, 수정 로그 확인 )
- 반 정보
    - 목록: 년도, 학년, 반, 담임, 과목 담당 인원, 학생 인원
        - 학생 인원 클릭: 학생 정보 페이지 이동
        - 담임 클릭: 교직원 상세 정보로 이동
        - 과목 담당 인원 클릭 : 교직원 정보 페이지 이동
    - ( 반 등록, 수정, 담당 및 학생 배치 )
    - ( 등록, 수정 로그 확인 )
- 시험 정보
    - 생성, 삭제(등록된 성적이 없을 경우, 날짜, 분기, 과목, 담당 교직원, 학년, 반)
    - ( 시험 정보에 학년, 반, 과목별 정답 입력 )
    - 시험별 성적 확인
        - 년도/학년/반/과목/학생 검색, 
        - 학년/반/과목 별로 그룹핑(필터) 기능 -> 시험별로 학년, 반, 학번, 학생 이름, 과목별 성적, 평균/등수/백분율


- 관리자 전용 로그인 페이지 (완료)
    - 관리자 아이디, 비밀번호로 로그인 (아이디: admin, 비밀번호: 1234)

- 학생 게시판 (완료)
    - 내용 확인 ( 질문, 상담, 건의 )
    - 답변 등록 ( 학교만 )

- 공지사항 (완료)
    -등록, 수정, 삭제(파일 첨부?, 학생/교직원 공지사항 구분)
- ( 학생 정보 생성 (초기 비밀번호 학번 자동 생성) )
- ( 학생 정보 수정, 비활성 )
=============================================================================
1. 권한 체크 하는 것(기능에 따라 사용 가능/불가 기능 넣기) - 학생 정보 조회, 공지사항 crud
2. 게시판에 파일 첨부 기능
3. front 게시판 만들 때 1개의 컴포넌트 내에서 config테이블 참조해서 만들어야 할듯
 - config 테이블에서는 댓글 가능 여부, 답글 가능 여부, 첨부파일 가능 여부 등 컬럼 추가해서 보충하기
4. 학생 삭제는 비활성으로 변경하기
5. 로그아웃 만들기
=============================================================================
<학생>
학번 PK
비밀번호
이름
주소
이메일
핸드폰
등록일
수정일

<교직원>
교직원번호 PK
비밀번호
이름
주소
이메일
핸드폰
등록일
수정일

<관리자>
로그인 아이디
비밀번호
이름

<과목>
과목 코드 PK
이름

<학년/반 정보>
학년/반ID PK
년도
학년
반
등록일

<반 학생 구성 정보>
학년/반ID PK
년도
학년
반
학번
이름

<반 교직원 구성 정보>
학년/반ID PK
교직원번호 PK
담당 종류 (담임, 과목)
담당 과목 (담임이면 null)

<올해 이전 과목별 시험 정보>
과거 시험ID PK
학년/반ID PK
과목 코드 PK
교직원번호 PK (과목 담당)
학번 PK
시험 날짜
분기
점수
등록일
수정일

<올해 이전 전체 시험 정보>
과거 시험ID PK
학년/반ID PK
학번 PK
분기
총점수
평균
석차
백분율
등록일
수정일

<올해 시험 정보>
시험ID PK
학년/반ID PK
과목 코드 PK
교직원번호 PK (과목 담당)
시험 날짜
분기

<올해 성적>
시험ID PK
과목 코드 PK
학번 PK
점수
등록일
수정일

<1:1 상담>
상담ID PK
종류 (담임, 과목, 학교)
교직원번호 PK (담임 또는 과목 선생님)
과목 코드 PK
학번 PK (등록한 사람)
답변한 사람 (교직원번호 PK 또는 'ADMIN')
제목
내용
답변
등록일시
답변일시

<공지사항>
종류 (학생, 교직원)
제목
내용
등록한 사람 ('ADMIN')
등록일시
수정일시

============================================================================================

-- CREATE TABLE member
-- (
--   member_id varchar(8)   NOT NULL COMMENT 'id',
--   password  varchar(50)  NOT NULL COMMENT '비밀번호',
--   name      varchar(50)  NOT NULL COMMENT '이름',
--   address   varchar(100) NOT NULL COMMENT '주소',
--   email     varchar(50)  NOT NULL COMMENT '이메일',
--   phone     varchar(12)  NOT NULL COMMENT '핸드폰',
--   grade     INT          NULL     COMMENT '1:학생 10:선생 99:관리자',
--   reg_date  datetime     NOT NULL COMMENT '등록일',
--   mod_date  datetime     NOT NULL COMMENT '수정일',
--   PRIMARY KEY (member_id)
-- ) COMMENT '맴버';

-- insert into member(member_id, password, name, address, email, phone, grade, reg_date, mod_date)
-- values("24010101", "$2a$10$QfMJGaMusX8dNMB07XSVRuWNBAvTtrqYwBg6U5uSa/AW4TjNar9G2", "김학생", "서울특별시 금천구 가산동", "student1@test.com", "01011112222", 99, "2020-01-01T00:00:00", "2020-01-01T00:00:00");

-- insert into member(member_id, password, name, address, email, phone, grade, reg_date, mod_date)
-- values("staff1", "$2a$10$QfMJGaMusX8dNMB07XSVRuWNBAvTtrqYwBg6U5uSa/AW4TjNar9G2", "김선생", "서울특별시 금천구 가산동", "staff1@test.com", "01022223333", 10, "2020-01-01T00:00:00", "2020-01-01T00:00:00");

-- CREATE TABLE board_config
-- (
--   board_config_id int          NOT NULL AUTO_INCREMENT COMMENT '아이디',
--   title           varchar(200) NOT NULL COMMENT '게시판 이름',
--   type            int          NOT NULL COMMENT '게시판 타입 (0: 일반, 1: 답글',
--   PRIMARY KEY (board_config_id)
-- );

-- insert into board_config(title, type) values("공지 사항", 0);
-- insert into board_config(title, type) values("1:1 상담", 1);

-- CREATE TABLE board
-- (
--   board_config_id  int          NOT NULL COMMENT '아이디',
--   board_id         int          NOT NULL AUTO_INCREMENT COMMENT '게시글 번호',
--   title            varchar(200) NOT NULL COMMENT '제목',
--   content          text         NOT NULL COMMENT '내용',
--   writer_member_id varchar(8)   NOT NULL COMMENT '작성자',
--   status           int          NULL     COMMENT '상태값 1:정상 게시글 0: 삭제',
--   ref_id           varchar(8)   NULL     COMMENT 'self join 해서 답글',
--   reg_date         datetime     NOT NULL COMMENT '등록일',
--   mod_date         datetime     NOT NULL COMMENT '수정일',
--   PRIMARY KEY (board_id)
-- ) COMMENT '게시판';

-- insert into 
-- 	board(board_config_id, title, content, writer_member_id, status, ref_id, reg_date, mod_date) 
-- values
-- 	(0, "테스트 공지 사항", "테스트 내용", 'admin1', 1, null, '2020-01-01T00:00:00', '2020-01-01T00:00:00');

-- insert into 
-- 	board(board_config_id, title, content, writer_member_id, status, ref_id, reg_date, mod_date) 
-- values
-- 	(1, "테스트 상담 요청", "상담 요청 내용", '24010101', 1, null, '2020-01-01T00:00:00', '2020-01-01T00:00:00');



-- CREATE TABLE board_student_requests
-- (
--   board_student_requests_id int NOT NULL AUTO_INCREMENT COMMENT 'id',
--   board_id                  int NOT NULL COMMENT '게시글 번호',
--   requests_type             int NOT NULL DEFAULT 0 COMMENT '0: 질문 1: 상담 2: 건의',
--   PRIMARY KEY (board_student_requests_id)
-- ) COMMENT '학생 게시판';


-- CREATE TABLE class_student
-- (
--   member_id varchar(8) NOT NULL COMMENT 'id',
--   class_id  int(11)    NOT NULL COMMENT '학년반_id'
-- ) COMMENT '반 학생 구성원';


-- CREATE TABLE class_staff
-- (
--   class_id     int(11)    NOT NULL COMMENT '학년반_id',
--   member_id    varchar(8) NOT NULL COMMENT 'id',
--   subject_code varchar(3) NOT NULL COMMENT '과목_code'
-- ) COMMENT '학급 교직원 구성원';



-- CREATE TABLE subject
-- (
--   subject_code varchar(3)  NOT NULL COMMENT '과목_code',
--   subject_name varchar(10) NOT NULL COMMENT '과목명',
--   PRIMARY KEY (subject_code)
-- ) COMMENT '과목';


-- CREATE TABLE class
-- (
--   class_id         int(11)    NOT NULL AUTO_INCREMENT COMMENT '학년반_id',
--   year             int(4)     NOT NULL COMMENT '년도',
--   grade            int        NOT NULL COMMENT '학년',
--   class            int        NOT NULL COMMENT '반',
--   reg_date         datetime   NOT NULL COMMENT '등록일',
--   homeroom_teacher varchar(8) NULL     COMMENT '담임',
--   PRIMARY KEY (class_id)
-- ) COMMENT '학년반';











